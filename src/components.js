/* 
    Project: REACT Demo for Education Horizons Group
    Sprint: 1
    Task: 1
    Author: Vineet W. Singh 
    Start Date: 22/4/21
    Date of last edit: 23/4/2021
    Date of last review:
*/
import React from 'react';
import ImageCanvas from './imageCanvas';
import {getImageMatrix} from './imageMatrix';
import 'bootstrap/dist/css/bootstrap.min.css';
import './components.css';


//select control to input sorted or unsorted value
class SelectForm extends React.Component {
  constructor(props) {
    super(props);
    this.handleChange = this.handleChange.bind(this);
  }
  //function to store change of sorted value - store it in the parent class
  handleChange(event){
    this.props.changeSorted(event.target.value==="false"?false:true);
  }
  //render 
  render() {
    return (
      <form>
        <label>
          COLORS :
          <select value={this.props.sorted?"true":"false"} onChange={this.handleChange}>            
            <option value="true">SORTED</option>
            <option value="false">UNSORTED</option>
          </select>
        </label>
      </form>
    );
  }
}

//parent class that hosts the select control and the canvas 
export class MainSection extends React.Component {
  constructor(props){
    super(props);
    this.state = 
    {
      sorted:true,
      imageData:getImageMatrix(true)
    }
  }  
  //method to update state if sorted has changed
  changeSorted(sorted){
    //reset state if sorted has changed
    if (this.state.sorted!==sorted)
      this.setState(
        {
          sorted:sorted,
          imageData:getImageMatrix(sorted)
        }
      );
  }
  //render 
  render() {
    return(
      <section id="content">
        <div className="row">
          <div className="col-12">
            <div className="row" id="description">
              <div className="col-12">
                <h4> 
                    This is a demo website made to demonstrate Vinnie's ability to code in Javascript while using the REACT.js 
                    framework. <br /> 
                    The image below is made of 32,768 cells. Each cell contains one color and has a height of 2 pixels 
                    and a width of 2 pixels. The colors have been programmatically generated by taking combinations of 
                    red, green and blue colors. Each color ranges over 32 values from 7 to 255 in steps of 8.<br />
                    There are two options for presentation of generated colors. With sorting, the colors have been sorted on a 
                    ranking value generated by the values of the colors themselves. 
                </h4>
              </div>
            </div>
            <div className="row d-flex align-items-center" id="inputFormRow">
              <div className="col-12 d-flex justify-content-center">
                <SelectForm sorted={this.state.sorted} changeSorted={this.changeSorted.bind(this)}/>
              </div>
            </div>
            <div className="row d-flex align-items-center">
              <div className="col-12 d-flex justify-content-center">
                <ImageCanvas sorted={this.state.sorted} imageData={this.state.imageData}/>
              </div>
            </div>
          </div>
        </div>
      </section>
    );
  }
}

export class Header extends React.Component{
  render(){
    return(
      <header>
        <div className="row h-100 d-flex align-items-center">
          <div className="col-12">
              <h2> React.js Colors and Image Demo</h2>
          </div>
        </div>
      </header>
    );
  }
}

export class Footer extends React.Component{
  render(){
    return(
      <footer>
        <div className="row h-100 d-flex align-items-center">
          <div className="col-12 d-flex align-items-center justify-content-center">
            <h4> Written by Vineet W. Singh (Vinnie Singh) - Demo for Education Horizons Group </h4>
          </div>
        </div>
      </footer>
    );
  }
}
